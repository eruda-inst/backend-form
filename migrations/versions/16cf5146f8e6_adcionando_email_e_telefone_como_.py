"""adcionando email e telefone como chavespara respostas Ãºnicas

Revision ID: 16cf5146f8e6
Revises: 7c87a92b3583
Create Date: 2025-09-23 13:11:46.039596

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '16cf5146f8e6'
down_revision: Union[str, Sequence[str], None] = '7c87a92b3583'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ixc_integracoes_id'), table_name='ixc_integracoes')
    op.drop_table('ixc_integracoes')
    op.add_column('formularios', sa.Column('unico_por_chave_modo', sa.String(length=24), server_default=sa.text("'none'"), nullable=False))
    op.add_column('respostas', sa.Column('email', sa.String(length=320), nullable=True))
    op.add_column('respostas', sa.Column('telefone', sa.String(length=32), nullable=True))
    op.create_index('ux_respostas_form_email_partial', 'respostas', ['formulario_id', 'email'], unique=True, postgresql_where=sa.text('email IS NOT NULL'))
    op.create_index('ux_respostas_form_phone_partial', 'respostas', ['formulario_id', 'telefone'], unique=True, postgresql_where=sa.text('telefone IS NOT NULL'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ux_respostas_form_phone_partial', table_name='respostas', postgresql_where=sa.text('telefone IS NOT NULL'))
    op.drop_index('ux_respostas_form_email_partial', table_name='respostas', postgresql_where=sa.text('email IS NOT NULL'))
    op.drop_column('respostas', 'telefone')
    op.drop_column('respostas', 'email')
    op.drop_column('formularios', 'unico_por_chave_modo')
    op.create_table('ixc_integracoes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('endereco', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('porta', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('usuario', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('senha', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('nome_banco', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('habilitada', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('criado_em', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('atualizado_em', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('ixc_integracoes_pkey')),
    sa.UniqueConstraint('endereco', 'nome_banco', name=op.f('uix_endereco_nome_banco'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_ixc_integracoes_id'), 'ixc_integracoes', ['id'], unique=False)
    # ### end Alembic commands ###
